{"version":3,"file":"app.js","mappings":"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","sources":["webpack://arena/./frontend/Views/MainPage.ts","webpack://arena/./frontend/Model/Player.ts","webpack://arena/./frontend/Views/AuthForm.ts","webpack://arena/./frontend/WebSocketClient.ts","webpack://arena/./frontend/Views/PlayerInfo.ts","webpack://arena/./frontend/Views/Players.ts","webpack://arena/./frontend/Router.ts","webpack://arena/./frontend/Controllers/Players.ts","webpack://arena/./frontend/Controllers/Game.ts","webpack://arena/./frontend/Mediator.ts","webpack://arena/./frontend/main.js","webpack://arena/./frontend/App.ts"],"sourcesContent":["class MainPage {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._playerPanel = document.createElement('div');\r\n        this._playerPanel.className = \"player-info\";\r\n        this._playersPanel = document.createElement('div');\r\n        this._playersPanel.className = \"players-list\";\r\n        this._gamePanel = document.createElement('div');\r\n        this._gamePanel.className = \"game-block\";\r\n    }\r\n    build() {\r\n        this._container.appendChild(this._playerPanel);\r\n        this._container.appendChild(this._playersPanel);\r\n        this._container.appendChild(this._gamePanel);\r\n    }\r\n    playerPanel() {\r\n        return this._playerPanel;\r\n    }\r\n    playersPanel() {\r\n        return this._playersPanel;\r\n    }\r\n    gamePanel() {\r\n        return this._gamePanel;\r\n    }\r\n}\r\nexport { MainPage };\r\n","class Player {\r\n    constructor(id, name, wins, status) {\r\n        this._id = id;\r\n        this._name = name;\r\n        this._wins = wins;\r\n        this._status = status;\r\n    }\r\n    id() {\r\n        return this._id;\r\n    }\r\n    name() {\r\n        return this._name;\r\n    }\r\n    wins() {\r\n        return this._wins;\r\n    }\r\n    status() {\r\n        return this._status;\r\n    }\r\n}\r\nexport { Player };\r\n","import * as Model from '../Model';\r\nclass AuthForm {\r\n    constructor(mediator) {\r\n        this._mediator = mediator;\r\n    }\r\n    build() {\r\n        let html = document.createElement('form');\r\n        let input = document.createElement('input');\r\n        let button = document.createElement('button');\r\n        button.innerHTML = 'Войти';\r\n        html.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let player = new Model.Player(1, input.value, 0, 'fff');\r\n            this._mediator.setPlayer(player);\r\n            this._mediator.handleEvent('auth');\r\n            return false;\r\n        });\r\n        html.appendChild(input);\r\n        html.appendChild(button);\r\n        return html;\r\n    }\r\n}\r\nexport { AuthForm };\r\n","class WebSocketClient {\r\n    constructor(url, socket, playerName) {\r\n        this._url = url;\r\n        this._socket = socket;\r\n        this._playerName = playerName;\r\n        //console.log(this._socket);\r\n        this.pong();\r\n    }\r\n    /*\r\n        public run()\r\n        {\r\n            this._socket = new WebSocket(this._url);\r\n            \r\n            //console.log(this._socket);\r\n            \r\n            this._socket.onmessage = function(event: any) {\r\n                console.log(`[message] Данные получены с сервера: ${event.data}`);\r\n            };\r\n            \r\n            this._socket.onclose = function(event: any) {\r\n                if (event.wasClean) {\r\n                    console.log(event);\r\n                    console.log(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\r\n                } else {\r\n                // например, сервер убил процесс или сеть недоступна\r\n                // обычно в этом случае event.code 1006\r\n                    console.log('[close] Соединение прервано');\r\n                }\r\n            };\r\n            \r\n            this._socket.onerror = function(error: any) {\r\n                console.log(error);\r\n            };\r\n    \r\n            this._socket.send('{\"teswtset\":\"sadf\"}');\r\n            this.pong();\r\n        }\r\n    */\r\n    setMessageHandler(f) {\r\n        this._socket.onmessage = f;\r\n    }\r\n    send(message) {\r\n        if (this._socket.readyState === 1) {\r\n            this._socket.send(message);\r\n        }\r\n    }\r\n    pong() {\r\n        if (!this._socket) {\r\n            console.log('err 1', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        if (this._socket.readyState === 0) {\r\n            setTimeout(this.pong, 1000);\r\n            return;\r\n        }\r\n        if (this._socket.readyState !== 1) {\r\n            console.log('err 2', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        this._socket.send(\"heartbeat: \" + this._playerName);\r\n        setTimeout(() => { return this.pong(); }, 30000);\r\n    }\r\n}\r\nexport { WebSocketClient };\r\n","class PlayerInfo {\r\n    constructor(player) {\r\n        this._player = player;\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        html.innerHTML = `<h3>name: ${this._player.name()}</h3><div>wins: ${this._player.wins()}</div>`;\r\n        return html;\r\n    }\r\n}\r\nexport { PlayerInfo };\r\n","class Players {\r\n    constructor(players) {\r\n        this._players = players;\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        let users = document.createElement('ul');\r\n        for (let i = 0; i < this._players.length; i++) {\r\n            let player = document.createElement('li');\r\n            console.log(this._players);\r\n            player.setAttribute('id', this._players[i].id().toString());\r\n            player.innerHTML = `\r\n                ${this._players[i].name()},\r\n                wins: ${this._players[i].wins()},\r\n                <span class=\"status${this.statusClassModificator(this._players[i].status())}\"> status: ${this._players[i].status()}</span>\r\n            `;\r\n            users.appendChild(player);\r\n        }\r\n        html.appendChild(users);\r\n        return html;\r\n    }\r\n    statusClassModificator(status) {\r\n        switch (status) {\r\n            case 'Offline': return ' status--offline';\r\n            case 'Online': return ' status--online';\r\n        }\r\n    }\r\n}\r\nexport { Players };\r\n","import * as Controllers from './Controllers';\r\nlet Router = {};\r\nRouter.Players = Controllers.Players;\r\nRouter.Game = Controllers.Game;\r\nexport { Router };\r\n","import * as Model from '../Model';\r\nimport * as Views from '../Views';\r\nclass Players {\r\n    constructor(mediator, webSocketClient) {\r\n        this._mediator = mediator;\r\n        this._webSocketClient = webSocketClient;\r\n    }\r\n    auth(args) {\r\n        console.log(args, 'auth');\r\n        if (args.ok === true) {\r\n            this._mediator.mainPage().playerPanel().innerHTML = '';\r\n            let player = new Model.Player(args.player.connect, args.player.name, args.player.wins, args.player.status);\r\n            let playerInfo = new Views.PlayerInfo(player);\r\n            this._mediator.mainPage().playerPanel().appendChild(playerInfo.build());\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    players(args) {\r\n        console.log(args, 'players');\r\n        if (!this.isObject(args.playersData)) {\r\n            return;\r\n        }\r\n        let players = [];\r\n        for (let index in args.playersData) {\r\n            players.push(new Model.Player(args.playersData[index].connect, args.playersData[index].name, args.playersData[index].wins, args.playersData[index].status));\r\n        }\r\n        let html = new Views.Players(players);\r\n        this._mediator.mainPage().playersPanel().innerHTML = '';\r\n        this._mediator.mainPage().playersPanel().appendChild(html.build());\r\n    }\r\n    isObject(value) {\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n}\r\nexport { Players };\r\n","class Game {\r\n}\r\nexport { Game };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as Views from './Views';\r\nimport { WebSocketClient } from './WebSocketClient';\r\nimport { Router } from './Router';\r\nclass Mediator {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._webSocketAddress = this._container.getAttribute('ws-server');\r\n        this._mainPage = new Views.MainPage(this._container);\r\n        this._mainPage.build();\r\n    }\r\n    handleEvent(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (event === 'start') {\r\n                let authForm = new Views.AuthForm(this);\r\n                this._mainPage.playerPanel().appendChild(authForm.build());\r\n            }\r\n            if (event === 'auth') {\r\n                let socket = yield WSconnect(this._webSocketAddress);\r\n                this._webSocketClient = new WebSocketClient(this._webSocketAddress, socket, this._player.name());\r\n                this._webSocketClient.setMessageHandler(this.MessageHandler.bind(this));\r\n                this._webSocketClient.send(`{\"controller\": \"Players\", \"action\": \"auth\", \"data\":\"${this._player.name()}\"}`);\r\n            }\r\n            if (event === 'players') {\r\n                this._webSocketClient.send('{\"controller\": \"Players\", \"action\":\"getPlayers\", \"data\": \"\"}');\r\n            }\r\n        });\r\n    }\r\n    MessageHandler(e) {\r\n        let request = JSON.parse(e.data);\r\n        let controller = new Router[request.controller](this, this._webSocketClient);\r\n        controller[request.action](request.args);\r\n    }\r\n    webSocketClient() {\r\n        this._webSocketClient;\r\n    }\r\n    container() {\r\n        return this._container;\r\n    }\r\n    mainPage() {\r\n        return this._mainPage;\r\n    }\r\n    setPlayer(player) {\r\n        this._player = player;\r\n    }\r\n}\r\nfunction WSconnect(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        var socket = new WebSocket(url);\r\n        socket.onclose = function (event) {\r\n            if (event.wasClean) {\r\n                console.log('Соединение закрыто чисто');\r\n            }\r\n            else {\r\n                console.log('Обрыв соединения'); // например, \"убит\" процесс сервера\r\n            }\r\n            console.log('Код: ' + event.code + ' причина: ' + event.reason);\r\n            console.log(event);\r\n        };\r\n        socket.onmessage = function (event) {\r\n            console.log(\"Получены данные \" + event.data);\r\n        };\r\n        socket.onerror = function (error) {\r\n            console.log(error);\r\n        };\r\n        socket.onopen = function () {\r\n            //socket.send('{\"action\": \"registration\", \"employee\": \"'+employeeId+'\"}');\r\n            //console.log(user_aterisk_login);\r\n            resolve(socket);\r\n        };\r\n        socket.onerror = function (err) {\r\n            reject(err);\r\n        };\r\n    });\r\n}\r\nexport { Mediator };\r\n","import './App.scss';\nimport App from './App.ts';\n\nwindow.addEventListener('load', () => (new App('#app')).run() );","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Mediator } from './Mediator';\r\nclass App {\r\n    constructor(selector) {\r\n        this._selector = selector;\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._container = document.querySelector(this._selector);\r\n            let mediator = new Mediator(this._container);\r\n            mediator.handleEvent('start');\r\n        });\r\n    }\r\n}\r\nclass Constroller {\r\n    constructor() {\r\n    }\r\n    print() {\r\n        console.log('controller');\r\n    }\r\n}\r\nexport default App;\r\n"],"names":["MainPage","constructor","container","this","_container","_playerPanel","document","createElement","className","_playersPanel","_gamePanel","build","appendChild","playerPanel","playersPanel","gamePanel","Player","id","name","wins","status","_id","_name","_wins","_status","AuthForm","mediator","_mediator","html","input","button","innerHTML","addEventListener","e","preventDefault","player","value","setPlayer","handleEvent","WebSocketClient","url","socket","playerName","_url","_socket","_playerName","pong","setMessageHandler","f","onmessage","send","message","readyState","setTimeout","console","log","PlayerInfo","_player","players","_players","users","i","length","setAttribute","toString","statusClassModificator","Router","webSocketClient","_webSocketClient","auth","args","ok","mainPage","connect","playerInfo","isObject","playersData","index","push","Mediator","_webSocketAddress","getAttribute","_mainPage","event","thisArg","_arguments","generator","authForm","Promise","resolve","reject","WebSocket","onclose","wasClean","code","reason","data","onerror","error","onopen","err","MessageHandler","bind","P","fulfilled","step","next","rejected","result","done","then","apply","request","JSON","parse","controller","action","window","selector","_selector","run","querySelector"],"sourceRoot":""}