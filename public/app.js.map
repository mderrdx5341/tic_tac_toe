{"version":3,"file":"app.js","mappings":"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","sources":["webpack://arena/./frontend/Model/Player.ts","webpack://arena/./frontend/Views/AuthForm.ts","webpack://arena/./frontend/Views/Players.ts","webpack://arena/./frontend/WebSocketClient.ts","webpack://arena/./frontend/Mediator.ts","webpack://arena/./frontend/main.js","webpack://arena/./frontend/App.ts"],"sourcesContent":["class Player {\r\n    constructor(id, name, wins, status) {\r\n        this._id = id;\r\n        this._name = name;\r\n        this._wins = wins;\r\n        this._status = status;\r\n    }\r\n    name() {\r\n        return this._name;\r\n    }\r\n    wins() {\r\n        return this._wins;\r\n    }\r\n    status() {\r\n        return this._status;\r\n    }\r\n}\r\nexport { Player };\r\n","import * as Model from '../Model';\r\nclass AuthForm {\r\n    constructor(mediator) {\r\n        this._mediator = mediator;\r\n    }\r\n    build() {\r\n        let html = document.createElement('form');\r\n        let input = document.createElement('input');\r\n        let button = document.createElement('button');\r\n        button.innerHTML = 'Войти';\r\n        html.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let player = new Model.Player(1, input.value, 0, 'fff');\r\n            this._mediator.setPlayer(player);\r\n            this._mediator.handleEvent('auth');\r\n            return false;\r\n        });\r\n        html.appendChild(input);\r\n        html.appendChild(button);\r\n        return html;\r\n    }\r\n}\r\nexport { AuthForm };\r\n","class Players {\r\n    constructor(players) {\r\n        this._players = players;\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        let users = document.createElement('ul');\r\n        for (let i = 0; i < this._players.length; i++) {\r\n            let player = document.createElement('li');\r\n            console.log(this._players);\r\n            player.innerHTML = `${this._players[i].name()}, wins: ${this._players[i].wins()}, status: ${this._players[i].status()}`;\r\n            users.appendChild(player);\r\n        }\r\n        html.appendChild(users);\r\n        return html;\r\n    }\r\n}\r\nexport { Players };\r\n","class WebSocketClient {\r\n    constructor(url, socket, playerName) {\r\n        this._url = url;\r\n        this._socket = socket;\r\n        this._playerName = playerName;\r\n        //console.log(this._socket);\r\n        this.pong();\r\n    }\r\n    /*\r\n        public run()\r\n        {\r\n            this._socket = new WebSocket(this._url);\r\n            \r\n            //console.log(this._socket);\r\n            \r\n            this._socket.onmessage = function(event: any) {\r\n                console.log(`[message] Данные получены с сервера: ${event.data}`);\r\n            };\r\n            \r\n            this._socket.onclose = function(event: any) {\r\n                if (event.wasClean) {\r\n                    console.log(event);\r\n                    console.log(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\r\n                } else {\r\n                // например, сервер убил процесс или сеть недоступна\r\n                // обычно в этом случае event.code 1006\r\n                    console.log('[close] Соединение прервано');\r\n                }\r\n            };\r\n            \r\n            this._socket.onerror = function(error: any) {\r\n                console.log(error);\r\n            };\r\n    \r\n            this._socket.send('{\"teswtset\":\"sadf\"}');\r\n            this.pong();\r\n        }\r\n    */\r\n    setMessageHandler(f) {\r\n        this._socket.onmessage = f;\r\n    }\r\n    send(message) {\r\n        if (this._socket.readyState === 1) {\r\n            this._socket.send(message);\r\n        }\r\n    }\r\n    pong() {\r\n        if (!this._socket) {\r\n            console.log('err 1', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        if (this._socket.readyState === 0) {\r\n            setTimeout(this.pong, 1000);\r\n            return;\r\n        }\r\n        if (this._socket.readyState !== 1) {\r\n            console.log('err 2', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        this._socket.send(\"heartbeat: \" + this._playerName);\r\n        setTimeout(() => { return this.pong(); }, 30000);\r\n    }\r\n}\r\nexport { WebSocketClient };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as Views from './Views';\r\nimport * as Model from './Model';\r\nimport { WebSocketClient } from './WebSocketClient';\r\nclass Mediator {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._webSocketAddress = this._container.getAttribute('ws-server');\r\n    }\r\n    handleEvent(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (event === 'start') {\r\n                let af = new Views.AuthForm(this);\r\n                this._container.appendChild(af.build());\r\n            }\r\n            if (event === 'auth') {\r\n                let socket = yield WSconnect(this._webSocketAddress);\r\n                this._webSocketClient = new WebSocketClient(this._webSocketAddress, socket, this._player.name());\r\n                this._webSocketClient.setMessageHandler((e) => {\r\n                    let response = JSON.parse(e.data);\r\n                    //console.log(e.data,  'auth');\r\n                    console.log(response);\r\n                    if (response.ok === true) {\r\n                        this.handleEvent('players');\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                });\r\n                this._webSocketClient.send(`{\"controller\": \"Players\", \"action\": \"auth\", \"data\":\"${this._player.name()}\"}`);\r\n            }\r\n            if (event === 'players') {\r\n                this._webSocketClient.setMessageHandler((e) => {\r\n                    console.log(e.data, 'players');\r\n                    let playersData = JSON.parse(e.data);\r\n                    if (!this.isObject(playersData)) {\r\n                        return;\r\n                    }\r\n                    let players = [];\r\n                    for (let index in playersData) {\r\n                        players.push(new Model.Player(0, playersData[index].name, playersData[index].wins, playersData[index].status));\r\n                    }\r\n                    let html = new Views.Players(players);\r\n                    this._container.appendChild(html.build());\r\n                });\r\n                this._webSocketClient.send('{\"controller\": \"Players\", \"action\":\"getPlayers\", \"data\": \"\"}');\r\n            }\r\n        });\r\n    }\r\n    MessageHandler(e) {\r\n        let request = JSON.parse(e.data);\r\n        request.controller;\r\n        request.args;\r\n        let controller = new request.controller(this);\r\n        controller.index(request.args);\r\n    }\r\n    isObject(value) {\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    setPlayer(player) {\r\n        this._player = player;\r\n    }\r\n}\r\nfunction WSconnect(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        var socket = new WebSocket(url);\r\n        socket.onclose = function (event) {\r\n            if (event.wasClean) {\r\n                console.log('Соединение закрыто чисто');\r\n            }\r\n            else {\r\n                console.log('Обрыв соединения'); // например, \"убит\" процесс сервера\r\n            }\r\n            console.log('Код: ' + event.code + ' причина: ' + event.reason);\r\n            console.log(event);\r\n        };\r\n        socket.onmessage = function (event) {\r\n            console.log(\"Получены данные \" + event.data);\r\n        };\r\n        socket.onerror = function (error) {\r\n            console.log(error);\r\n        };\r\n        socket.onopen = function () {\r\n            //socket.send('{\"action\": \"registration\", \"employee\": \"'+employeeId+'\"}');\r\n            //console.log(user_aterisk_login);\r\n            resolve(socket);\r\n        };\r\n        socket.onerror = function (err) {\r\n            reject(err);\r\n        };\r\n    });\r\n}\r\nexport { Mediator };\r\n","import './App.scss';\nimport App from './App.ts';\n\nwindow.addEventListener('load', () => (new App('#app')).run() );","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Mediator } from './Mediator';\r\nclass App {\r\n    constructor(selector) {\r\n        this._selector = selector;\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._container = document.querySelector(this._selector);\r\n            let mediator = new Mediator(this._container);\r\n            mediator.handleEvent('start');\r\n            //let c = 'Controller';\r\n            //let co = Object.create(c);\r\n        });\r\n    }\r\n}\r\nclass Constroller {\r\n    constructor() {\r\n    }\r\n    print() {\r\n        console.log('controller');\r\n    }\r\n}\r\nexport default App;\r\n"],"names":["Player","constructor","id","name","wins","status","this","_id","_name","_wins","_status","AuthForm","mediator","_mediator","build","html","document","createElement","input","button","innerHTML","addEventListener","e","preventDefault","player","value","setPlayer","handleEvent","appendChild","Players","players","_players","users","i","length","console","log","WebSocketClient","url","socket","playerName","_url","_socket","_playerName","pong","setMessageHandler","f","onmessage","send","message","readyState","setTimeout","Mediator","container","_container","_webSocketAddress","getAttribute","event","thisArg","_arguments","generator","af","Promise","resolve","reject","WebSocket","onclose","wasClean","code","reason","data","onerror","error","onopen","err","_webSocketClient","_player","response","JSON","parse","ok","playersData","isObject","index","push","P","fulfilled","step","next","rejected","result","done","then","apply","MessageHandler","request","controller","args","window","selector","_selector","run","querySelector"],"sourceRoot":""}