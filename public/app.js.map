{"version":3,"file":"app.js","mappings":"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","sources":["webpack://arena/./frontend/Model/Player.ts","webpack://arena/./frontend/Views/AuthForm.ts","webpack://arena/./frontend/WebSocketClient.ts","webpack://arena/./frontend/Views/Players.ts","webpack://arena/./frontend/Router.ts","webpack://arena/./frontend/Controllers/Players.ts","webpack://arena/./frontend/Controllers/Game.ts","webpack://arena/./frontend/Mediator.ts","webpack://arena/./frontend/main.js","webpack://arena/./frontend/App.ts"],"sourcesContent":["class Player {\r\n    constructor(id, name, wins, status) {\r\n        this._id = id;\r\n        this._name = name;\r\n        this._wins = wins;\r\n        this._status = status;\r\n    }\r\n    name() {\r\n        return this._name;\r\n    }\r\n    wins() {\r\n        return this._wins;\r\n    }\r\n    status() {\r\n        return this._status;\r\n    }\r\n}\r\nexport { Player };\r\n","import * as Model from '../Model';\r\nclass AuthForm {\r\n    constructor(mediator) {\r\n        this._mediator = mediator;\r\n    }\r\n    build() {\r\n        let html = document.createElement('form');\r\n        let input = document.createElement('input');\r\n        let button = document.createElement('button');\r\n        button.innerHTML = 'Войти';\r\n        html.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let player = new Model.Player(1, input.value, 0, 'fff');\r\n            this._mediator.setPlayer(player);\r\n            this._mediator.handleEvent('auth');\r\n            return false;\r\n        });\r\n        html.appendChild(input);\r\n        html.appendChild(button);\r\n        return html;\r\n    }\r\n}\r\nexport { AuthForm };\r\n","class WebSocketClient {\r\n    constructor(url, socket, playerName) {\r\n        this._url = url;\r\n        this._socket = socket;\r\n        this._playerName = playerName;\r\n        //console.log(this._socket);\r\n        this.pong();\r\n    }\r\n    /*\r\n        public run()\r\n        {\r\n            this._socket = new WebSocket(this._url);\r\n            \r\n            //console.log(this._socket);\r\n            \r\n            this._socket.onmessage = function(event: any) {\r\n                console.log(`[message] Данные получены с сервера: ${event.data}`);\r\n            };\r\n            \r\n            this._socket.onclose = function(event: any) {\r\n                if (event.wasClean) {\r\n                    console.log(event);\r\n                    console.log(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\r\n                } else {\r\n                // например, сервер убил процесс или сеть недоступна\r\n                // обычно в этом случае event.code 1006\r\n                    console.log('[close] Соединение прервано');\r\n                }\r\n            };\r\n            \r\n            this._socket.onerror = function(error: any) {\r\n                console.log(error);\r\n            };\r\n    \r\n            this._socket.send('{\"teswtset\":\"sadf\"}');\r\n            this.pong();\r\n        }\r\n    */\r\n    setMessageHandler(f) {\r\n        this._socket.onmessage = f;\r\n    }\r\n    send(message) {\r\n        if (this._socket.readyState === 1) {\r\n            this._socket.send(message);\r\n        }\r\n    }\r\n    pong() {\r\n        if (!this._socket) {\r\n            console.log('err 1', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        if (this._socket.readyState === 0) {\r\n            setTimeout(this.pong, 1000);\r\n            return;\r\n        }\r\n        if (this._socket.readyState !== 1) {\r\n            console.log('err 2', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        this._socket.send(\"heartbeat: \" + this._playerName);\r\n        setTimeout(() => { return this.pong(); }, 30000);\r\n    }\r\n}\r\nexport { WebSocketClient };\r\n","class Players {\r\n    constructor(players) {\r\n        this._players = players;\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        let users = document.createElement('ul');\r\n        for (let i = 0; i < this._players.length; i++) {\r\n            let player = document.createElement('li');\r\n            console.log(this._players);\r\n            player.innerHTML = `${this._players[i].name()}, wins: ${this._players[i].wins()}, status: ${this._players[i].status()}`;\r\n            users.appendChild(player);\r\n        }\r\n        html.appendChild(users);\r\n        return html;\r\n    }\r\n}\r\nexport { Players };\r\n","import * as Controllers from './Controllers';\r\nlet Router = {};\r\nRouter.Players = Controllers.Players;\r\nRouter.Game = Controllers.Game;\r\nexport { Router };\r\n","import * as Model from '../Model';\r\nimport * as Views from '../Views';\r\nclass Players {\r\n    constructor(mediator, webSocketClient) {\r\n        this._mediator = mediator;\r\n        this._webSocketClient = webSocketClient;\r\n    }\r\n    auth(args) {\r\n        console.log(args, 'auth');\r\n        if (args.ok === true) {\r\n            //this._mediator.handleEvent('players');\t\t\t\t\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    players(args) {\r\n        console.log(args, 'players');\r\n        if (!this.isObject(args.playersData)) {\r\n            return;\r\n        }\r\n        let players = [];\r\n        for (let index in args.playersData) {\r\n            players.push(new Model.Player(0, args.playersData[index].name, args.playersData[index].wins, args.playersData[index].status));\r\n        }\r\n        let html = new Views.Players(players);\r\n        this._mediator.container().appendChild(html.build());\r\n    }\r\n    isObject(value) {\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n}\r\nexport { Players };\r\n","class Game {\r\n}\r\nexport { Game };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as Views from './Views';\r\nimport { WebSocketClient } from './WebSocketClient';\r\nimport { Router } from './Router';\r\nclass Mediator {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._webSocketAddress = this._container.getAttribute('ws-server');\r\n    }\r\n    handleEvent(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (event === 'start') {\r\n                let authForm = new Views.AuthForm(this);\r\n                this._container.appendChild(authForm.build());\r\n            }\r\n            if (event === 'auth') {\r\n                let socket = yield WSconnect(this._webSocketAddress);\r\n                this._webSocketClient = new WebSocketClient(this._webSocketAddress, socket, this._player.name());\r\n                this._webSocketClient.setMessageHandler(this.MessageHandler.bind(this));\r\n                this._webSocketClient.send(`{\"controller\": \"Players\", \"action\": \"auth\", \"data\":\"${this._player.name()}\"}`);\r\n            }\r\n            if (event === 'players') {\r\n                /*this._webSocketClient.setMessageHandler((e) => {\r\n                    console.log(e.data, 'players');\r\n                    let playersData = JSON.parse(e.data);\r\n                    if (!this.isObject(playersData)) {\r\n                        return;\r\n                    }\r\n                    let players: Model.Player[] = [];\r\n                    for(let index in playersData) {\r\n                        players.push(new Model.Player(0, playersData[index].name, playersData[index].wins, playersData[index].status));\r\n                    }\r\n                    let html = new Views.Players(players);\r\n                    this._container.appendChild(html.build());\r\n                });*/\r\n                this._webSocketClient.send('{\"controller\": \"Players\", \"action\":\"getPlayers\", \"data\": \"\"}');\r\n            }\r\n        });\r\n    }\r\n    MessageHandler(e) {\r\n        let request = JSON.parse(e.data);\r\n        let controller = new Router[request.controller](this, this._webSocketClient);\r\n        controller[request.action](request.args);\r\n    }\r\n    webSocketClient() {\r\n        this._webSocketClient;\r\n    }\r\n    container() {\r\n        return this._container;\r\n    }\r\n    setPlayer(player) {\r\n        this._player = player;\r\n    }\r\n}\r\nfunction WSconnect(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        var socket = new WebSocket(url);\r\n        socket.onclose = function (event) {\r\n            if (event.wasClean) {\r\n                console.log('Соединение закрыто чисто');\r\n            }\r\n            else {\r\n                console.log('Обрыв соединения'); // например, \"убит\" процесс сервера\r\n            }\r\n            console.log('Код: ' + event.code + ' причина: ' + event.reason);\r\n            console.log(event);\r\n        };\r\n        socket.onmessage = function (event) {\r\n            console.log(\"Получены данные \" + event.data);\r\n        };\r\n        socket.onerror = function (error) {\r\n            console.log(error);\r\n        };\r\n        socket.onopen = function () {\r\n            //socket.send('{\"action\": \"registration\", \"employee\": \"'+employeeId+'\"}');\r\n            //console.log(user_aterisk_login);\r\n            resolve(socket);\r\n        };\r\n        socket.onerror = function (err) {\r\n            reject(err);\r\n        };\r\n    });\r\n}\r\nexport { Mediator };\r\n","import './App.scss';\nimport App from './App.ts';\n\nwindow.addEventListener('load', () => (new App('#app')).run() );","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Mediator } from './Mediator';\r\nclass App {\r\n    constructor(selector) {\r\n        this._selector = selector;\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._container = document.querySelector(this._selector);\r\n            let mediator = new Mediator(this._container);\r\n            mediator.handleEvent('start');\r\n        });\r\n    }\r\n}\r\nclass Constroller {\r\n    constructor() {\r\n    }\r\n    print() {\r\n        console.log('controller');\r\n    }\r\n}\r\nexport default App;\r\n"],"names":["Player","constructor","id","name","wins","status","this","_id","_name","_wins","_status","AuthForm","mediator","_mediator","build","html","document","createElement","input","button","innerHTML","addEventListener","e","preventDefault","player","value","setPlayer","handleEvent","appendChild","WebSocketClient","url","socket","playerName","_url","_socket","_playerName","pong","setMessageHandler","f","onmessage","send","message","readyState","setTimeout","console","log","players","_players","users","i","length","Router","webSocketClient","_webSocketClient","auth","args","ok","isObject","playersData","index","push","container","Mediator","_container","_webSocketAddress","getAttribute","event","thisArg","_arguments","generator","authForm","Promise","resolve","reject","WebSocket","onclose","wasClean","code","reason","data","onerror","error","onopen","err","_player","MessageHandler","bind","P","fulfilled","step","next","rejected","result","done","then","apply","request","JSON","parse","controller","action","window","selector","_selector","run","querySelector"],"sourceRoot":""}