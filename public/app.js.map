{"version":3,"file":"app.js","mappings":"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","sources":["webpack://arena/./frontend/Views/MainPage.ts","webpack://arena/./frontend/Model/Player.ts","webpack://arena/./frontend/Views/AuthForm.ts","webpack://arena/./frontend/Views/GameBoard.ts","webpack://arena/./frontend/WebSocketClient.ts","webpack://arena/./frontend/Views/PlayerInfo.ts","webpack://arena/./frontend/Views/Players.ts","webpack://arena/./frontend/Router.ts","webpack://arena/./frontend/Controllers/Players.ts","webpack://arena/./frontend/Controllers/Game.ts","webpack://arena/./frontend/Mediator.ts","webpack://arena/./frontend/main.js","webpack://arena/./frontend/App.ts"],"sourcesContent":["class MainPage {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._playerPanel = document.createElement('div');\r\n        this._playerPanel.className = \"player-info\";\r\n        this._playersPanel = document.createElement('div');\r\n        this._playersPanel.className = \"players-list\";\r\n        this._gamePanel = document.createElement('div');\r\n        this._gamePanel.className = \"game-block\";\r\n    }\r\n    build() {\r\n        this._container.appendChild(this._playerPanel);\r\n        this._container.appendChild(this._playersPanel);\r\n        this._container.appendChild(this._gamePanel);\r\n    }\r\n    playerPanel() {\r\n        return this._playerPanel;\r\n    }\r\n    playersPanel() {\r\n        return this._playersPanel;\r\n    }\r\n    gamePanel() {\r\n        return this._gamePanel;\r\n    }\r\n}\r\nexport { MainPage };\r\n","class Player {\r\n    constructor(id, name, wins, status) {\r\n        this._id = id;\r\n        this._name = name;\r\n        this._wins = wins;\r\n        this._status = status;\r\n    }\r\n    id() {\r\n        return this._id;\r\n    }\r\n    name() {\r\n        return this._name;\r\n    }\r\n    wins() {\r\n        return this._wins;\r\n    }\r\n    status() {\r\n        return this._status;\r\n    }\r\n}\r\nexport { Player };\r\n","import * as Model from '../Model';\r\nclass AuthForm {\r\n    constructor(mediator) {\r\n        this._mediator = mediator;\r\n    }\r\n    build() {\r\n        let html = document.createElement('form');\r\n        let input = document.createElement('input');\r\n        let button = document.createElement('button');\r\n        button.innerHTML = 'Войти';\r\n        html.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let player = new Model.Player(1, input.value, 0, 'fff');\r\n            this._mediator.setPlayer(player);\r\n            this._mediator.handleEvent('auth');\r\n            return false;\r\n        });\r\n        html.appendChild(input);\r\n        html.appendChild(button);\r\n        return html;\r\n    }\r\n}\r\nexport { AuthForm };\r\n","class GameBoard {\r\n    constructor(mediator) {\r\n        this._mediator = mediator;\r\n        this._cells = [];\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        html.className = 'game-board';\r\n        for (let i = 0; i <= 8; i++) {\r\n            let cell = document.createElement('div');\r\n            cell.className = 'game-board__cell';\r\n            cell.setAttribute('id', i.toString());\r\n            this._cells.push(cell);\r\n            html.appendChild(cell);\r\n        }\r\n        this.start();\r\n        return html;\r\n    }\r\n    start() {\r\n        let i = 0;\r\n        let _this = this;\r\n        console.log(this._cells);\r\n        for (let cell of this._cells) {\r\n            cell.addEventListener('click', function step() {\r\n                this.textContent = ['X', 'O'][i % 2];\r\n                this.removeEventListener('click', step);\r\n                if (_this.isVictory(_this._cells)) {\r\n                    alert(this.textContent);\r\n                }\r\n                else if (i == 8) {\r\n                    alert('ничья');\r\n                }\r\n                i++;\r\n            });\r\n        }\r\n    }\r\n    isVictory(cells) {\r\n        let combs = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let comb of combs) {\r\n            if (cells[comb[0]].textContent == cells[comb[1]].textContent &&\r\n                cells[comb[1]].textContent == cells[comb[2]].textContent &&\r\n                cells[comb[0]].textContent != '') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport { GameBoard };\r\n","class WebSocketClient {\r\n    constructor(url, socket, playerName) {\r\n        this._url = url;\r\n        this._socket = socket;\r\n        this._playerName = playerName;\r\n        //console.log(this._socket);\r\n        this.pong();\r\n    }\r\n    /*\r\n        public run()\r\n        {\r\n            this._socket = new WebSocket(this._url);\r\n            \r\n            //console.log(this._socket);\r\n            \r\n            this._socket.onmessage = function(event: any) {\r\n                console.log(`[message] Данные получены с сервера: ${event.data}`);\r\n            };\r\n            \r\n            this._socket.onclose = function(event: any) {\r\n                if (event.wasClean) {\r\n                    console.log(event);\r\n                    console.log(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\r\n                } else {\r\n                // например, сервер убил процесс или сеть недоступна\r\n                // обычно в этом случае event.code 1006\r\n                    console.log('[close] Соединение прервано');\r\n                }\r\n            };\r\n            \r\n            this._socket.onerror = function(error: any) {\r\n                console.log(error);\r\n            };\r\n    \r\n            this._socket.send('{\"teswtset\":\"sadf\"}');\r\n            this.pong();\r\n        }\r\n    */\r\n    setMessageHandler(f) {\r\n        this._socket.onmessage = f;\r\n    }\r\n    send(message) {\r\n        if (this._socket.readyState === 1) {\r\n            this._socket.send(message);\r\n        }\r\n    }\r\n    pong() {\r\n        if (!this._socket) {\r\n            console.log('err 1', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        if (this._socket.readyState === 0) {\r\n            setTimeout(this.pong, 1000);\r\n            return;\r\n        }\r\n        if (this._socket.readyState !== 1) {\r\n            console.log('err 2', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        this._socket.send(\"heartbeat: \" + this._playerName);\r\n        setTimeout(() => { return this.pong(); }, 30000);\r\n    }\r\n}\r\nexport { WebSocketClient };\r\n","class PlayerInfo {\r\n    constructor(player) {\r\n        this._player = player;\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        html.innerHTML = `<h3>name: ${this._player.name()}</h3><div>wins: ${this._player.wins()}</div>`;\r\n        return html;\r\n    }\r\n}\r\nexport { PlayerInfo };\r\n","class Players {\r\n    constructor(players) {\r\n        this._players = players;\r\n    }\r\n    build() {\r\n        let html = document.createElement('div');\r\n        let users = document.createElement('ul');\r\n        for (let i = 0; i < this._players.length; i++) {\r\n            let player = document.createElement('li');\r\n            console.log(this._players);\r\n            player.setAttribute('id', this._players[i].id().toString());\r\n            player.innerHTML = `\r\n                ${this._players[i].name()},\r\n                wins: ${this._players[i].wins()},\r\n                <span class=\"status${this.statusClassModificator(this._players[i].status())}\"> status: ${this._players[i].status()}</span>\r\n            `;\r\n            users.appendChild(player);\r\n        }\r\n        html.appendChild(users);\r\n        return html;\r\n    }\r\n    statusClassModificator(status) {\r\n        switch (status) {\r\n            case 'Offline': return ' status--offline';\r\n            case 'Online': return ' status--online';\r\n        }\r\n    }\r\n}\r\nexport { Players };\r\n","import * as Controllers from './Controllers';\r\nlet Router = {};\r\nRouter.Players = Controllers.Players;\r\nRouter.Game = Controllers.Game;\r\nexport { Router };\r\n","import * as Model from '../Model';\r\nimport * as Views from '../Views';\r\nclass Players {\r\n    constructor(mediator, webSocketClient) {\r\n        this._mediator = mediator;\r\n        this._webSocketClient = webSocketClient;\r\n    }\r\n    auth(args) {\r\n        console.log(args, 'auth');\r\n        if (args.ok === true) {\r\n            this._mediator.mainPage().playerPanel().innerHTML = '';\r\n            let player = new Model.Player(args.player.connect, args.player.name, args.player.wins, args.player.status);\r\n            let playerInfo = new Views.PlayerInfo(player);\r\n            this._mediator.mainPage().playerPanel().appendChild(playerInfo.build());\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    players(args) {\r\n        console.log(args, 'players');\r\n        if (!this.isObject(args.playersData)) {\r\n            return;\r\n        }\r\n        let players = [];\r\n        for (let index in args.playersData) {\r\n            players.push(new Model.Player(args.playersData[index].connect, args.playersData[index].name, args.playersData[index].wins, args.playersData[index].status));\r\n        }\r\n        let html = new Views.Players(players);\r\n        this._mediator.mainPage().playersPanel().innerHTML = '';\r\n        this._mediator.mainPage().playersPanel().appendChild(html.build());\r\n    }\r\n    isObject(value) {\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n}\r\nexport { Players };\r\n","class Game {\r\n}\r\nexport { Game };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as Views from './Views';\r\nimport { WebSocketClient } from './WebSocketClient';\r\nimport { Router } from './Router';\r\nclass Mediator {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._webSocketAddress = this._container.getAttribute('ws-server');\r\n        this._mainPage = new Views.MainPage(this._container);\r\n        this._mainPage.build();\r\n    }\r\n    handleEvent(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (event === 'start') {\r\n                let authForm = new Views.AuthForm(this);\r\n                this._mainPage.playerPanel().appendChild(authForm.build());\r\n                let gameBoard = new Views.GameBoard(this);\r\n                this._mainPage.gamePanel().appendChild(gameBoard.build());\r\n            }\r\n            if (event === 'auth') {\r\n                let socket = yield WSconnect(this._webSocketAddress);\r\n                this._webSocketClient = new WebSocketClient(this._webSocketAddress, socket, this._player.name());\r\n                this._webSocketClient.setMessageHandler(this.MessageHandler.bind(this));\r\n                this._webSocketClient.send(`{\"controller\": \"Players\", \"action\": \"auth\", \"data\":\"${this._player.name()}\"}`);\r\n            }\r\n            if (event === 'players') {\r\n                this._webSocketClient.send('{\"controller\": \"Players\", \"action\":\"getPlayers\", \"data\": \"\"}');\r\n            }\r\n        });\r\n    }\r\n    MessageHandler(e) {\r\n        let request = JSON.parse(e.data);\r\n        let controller = new Router[request.controller](this, this._webSocketClient);\r\n        controller[request.action](request.args);\r\n    }\r\n    webSocketClient() {\r\n        this._webSocketClient;\r\n    }\r\n    container() {\r\n        return this._container;\r\n    }\r\n    mainPage() {\r\n        return this._mainPage;\r\n    }\r\n    setPlayer(player) {\r\n        this._player = player;\r\n    }\r\n}\r\nfunction WSconnect(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        var socket = new WebSocket(url);\r\n        socket.onclose = function (event) {\r\n            if (event.wasClean) {\r\n                console.log('Соединение закрыто чисто');\r\n            }\r\n            else {\r\n                console.log('Обрыв соединения'); // например, \"убит\" процесс сервера\r\n            }\r\n            console.log('Код: ' + event.code + ' причина: ' + event.reason);\r\n            console.log(event);\r\n        };\r\n        socket.onmessage = function (event) {\r\n            console.log(\"Получены данные \" + event.data);\r\n        };\r\n        socket.onerror = function (error) {\r\n            console.log(error);\r\n        };\r\n        socket.onopen = function () {\r\n            //socket.send('{\"action\": \"registration\", \"employee\": \"'+employeeId+'\"}');\r\n            //console.log(user_aterisk_login);\r\n            resolve(socket);\r\n        };\r\n        socket.onerror = function (err) {\r\n            reject(err);\r\n        };\r\n    });\r\n}\r\nexport { Mediator };\r\n","import './App.scss';\nimport App from './App.ts';\n\nwindow.addEventListener('load', () => (new App('#app')).run() );","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Mediator } from './Mediator';\r\nclass App {\r\n    constructor(selector) {\r\n        this._selector = selector;\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._container = document.querySelector(this._selector);\r\n            let mediator = new Mediator(this._container);\r\n            mediator.handleEvent('start');\r\n        });\r\n    }\r\n}\r\nclass Constroller {\r\n    constructor() {\r\n    }\r\n    print() {\r\n        console.log('controller');\r\n    }\r\n}\r\nexport default App;\r\n"],"names":["MainPage","constructor","container","this","_container","_playerPanel","document","createElement","className","_playersPanel","_gamePanel","build","appendChild","playerPanel","playersPanel","gamePanel","Player","id","name","wins","status","_id","_name","_wins","_status","AuthForm","mediator","_mediator","html","input","button","innerHTML","addEventListener","e","preventDefault","player","value","setPlayer","handleEvent","GameBoard","_cells","i","cell","setAttribute","toString","push","start","_this","console","log","step","textContent","removeEventListener","isVictory","alert","cells","combs","comb","WebSocketClient","url","socket","playerName","_url","_socket","_playerName","pong","setMessageHandler","f","onmessage","send","message","readyState","setTimeout","PlayerInfo","_player","players","_players","users","length","statusClassModificator","Router","webSocketClient","_webSocketClient","auth","args","ok","mainPage","connect","playerInfo","isObject","playersData","index","Mediator","_webSocketAddress","getAttribute","_mainPage","event","thisArg","_arguments","generator","authForm","gameBoard","Promise","resolve","reject","WebSocket","onclose","wasClean","code","reason","data","onerror","error","onopen","err","MessageHandler","bind","P","fulfilled","next","rejected","result","done","then","apply","request","JSON","parse","controller","action","window","selector","_selector","run","querySelector"],"sourceRoot":""}