{"version":3,"file":"app.js","mappings":"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","sources":["webpack://arena/./frontend/Model/Player.ts","webpack://arena/./frontend/Views/AuthForm.ts","webpack://arena/./frontend/WebSocketClient.ts","webpack://arena/./frontend/Mediator.ts","webpack://arena/./frontend/main.js","webpack://arena/./frontend/App.ts"],"sourcesContent":["class Player {\r\n    constructor(id, name, wings) {\r\n        this._id = id;\r\n        this._name = name;\r\n        this._wings = wings;\r\n    }\r\n    name() {\r\n        return this._name;\r\n    }\r\n}\r\nexport { Player };\r\n","import * as Model from '../Model';\r\nclass AuthForm {\r\n    constructor(mediator) {\r\n        this._mediator = mediator;\r\n    }\r\n    build() {\r\n        let html = document.createElement('form');\r\n        let input = document.createElement('input');\r\n        let button = document.createElement('button');\r\n        button.innerHTML = 'Войти';\r\n        html.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            let player = new Model.Player(1, input.value, 0);\r\n            this._mediator.setPlayer(player);\r\n            this._mediator.handleEvent('auth');\r\n            return false;\r\n        });\r\n        html.appendChild(input);\r\n        html.appendChild(button);\r\n        return html;\r\n    }\r\n}\r\nexport { AuthForm };\r\n","class WebSocketClient {\r\n    constructor(url, socket, playerName) {\r\n        this._url = url;\r\n        this._socket = socket;\r\n        this._playerName = playerName;\r\n        //console.log(this._socket);\r\n        this.pong();\r\n    }\r\n    /*\r\n        public run()\r\n        {\r\n            this._socket = new WebSocket(this._url);\r\n            \r\n            //console.log(this._socket);\r\n            \r\n            this._socket.onmessage = function(event: any) {\r\n                console.log(`[message] Данные получены с сервера: ${event.data}`);\r\n            };\r\n            \r\n            this._socket.onclose = function(event: any) {\r\n                if (event.wasClean) {\r\n                    console.log(event);\r\n                    console.log(`[close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`);\r\n                } else {\r\n                // например, сервер убил процесс или сеть недоступна\r\n                // обычно в этом случае event.code 1006\r\n                    console.log('[close] Соединение прервано');\r\n                }\r\n            };\r\n            \r\n            this._socket.onerror = function(error: any) {\r\n                console.log(error);\r\n            };\r\n    \r\n            this._socket.send('{\"teswtset\":\"sadf\"}');\r\n            this.pong();\r\n        }\r\n    */\r\n    send(message) {\r\n        if (this._socket.readyState === 1) {\r\n            this._socket.send(message);\r\n        }\r\n    }\r\n    pong() {\r\n        console.log('pong');\r\n        console.log(this._socket);\r\n        console.log(this);\r\n        if (!this._socket) {\r\n            console.log('err 1', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        if (this._socket.readyState === 0) {\r\n            setTimeout(this.pong, 1000);\r\n            return;\r\n        }\r\n        if (this._socket.readyState !== 1) {\r\n            console.log('err 2', this._socket);\r\n            return;\r\n        }\r\n        ;\r\n        this._socket.send(\"heartbeat: \" + this._playerName);\r\n        //setTimeout(() => {return this.pong()}, 1000);\r\n    }\r\n}\r\nexport { WebSocketClient };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as Views from './Views';\r\nimport { WebSocketClient } from './WebSocketClient';\r\nclass Mediator {\r\n    constructor(container) {\r\n        this._container = container;\r\n        this._webSocketAddress = this._container.getAttribute('ws-server');\r\n    }\r\n    handleEvent(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (event === 'start') {\r\n                let af = new Views.AuthForm(this);\r\n                this._container.appendChild(af.build());\r\n            }\r\n            if (event === 'auth') {\r\n                let socket = yield WSconnect(this._webSocketAddress);\r\n                let a = new WebSocketClient(this._webSocketAddress, socket, this._player.name());\r\n                a.send('message');\r\n            }\r\n        });\r\n    }\r\n    setPlayer(player) {\r\n        this._player = player;\r\n    }\r\n}\r\nfunction WSconnect(url) {\r\n    return new Promise(function (resolve, reject) {\r\n        var socket = new WebSocket(url);\r\n        socket.onclose = function (event) {\r\n            if (event.wasClean) {\r\n                console.log('Соединение закрыто чисто');\r\n            }\r\n            else {\r\n                console.log('Обрыв соединения'); // например, \"убит\" процесс сервера\r\n            }\r\n            console.log('Код: ' + event.code + ' причина: ' + event.reason);\r\n            console.log(event);\r\n        };\r\n        socket.onmessage = function (event) {\r\n            console.log(\"Получены данные \" + event.data);\r\n        };\r\n        socket.onerror = function (error) {\r\n            console.log(error);\r\n        };\r\n        socket.onopen = function () {\r\n            //socket.send('{\"action\": \"registration\", \"employee\": \"'+employeeId+'\"}');\r\n            //console.log(user_aterisk_login);\r\n            resolve(socket);\r\n        };\r\n        socket.onerror = function (err) {\r\n            reject(err);\r\n        };\r\n    });\r\n}\r\nexport { Mediator };\r\n","import './App.scss';\nimport App from './App.ts';\n\nwindow.addEventListener('load', () => (new App('#app')).run() );","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Mediator } from './Mediator';\r\nclass App {\r\n    constructor(selector) {\r\n        this._selector = selector;\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._container = document.querySelector(this._selector);\r\n            let mediator = new Mediator(this._container);\r\n            mediator.handleEvent('start');\r\n        });\r\n    }\r\n}\r\nexport default App;\r\n"],"names":["Player","constructor","id","name","wings","this","_id","_name","_wings","AuthForm","mediator","_mediator","build","html","document","createElement","input","button","innerHTML","addEventListener","e","preventDefault","player","value","setPlayer","handleEvent","appendChild","WebSocketClient","url","socket","playerName","_url","_socket","_playerName","pong","send","message","readyState","console","log","setTimeout","Mediator","container","_container","_webSocketAddress","getAttribute","event","thisArg","_arguments","generator","af","Promise","resolve","reject","WebSocket","onclose","wasClean","code","reason","onmessage","data","onerror","error","onopen","err","_player","P","fulfilled","step","next","rejected","result","done","then","apply","window","selector","_selector","run","querySelector"],"sourceRoot":""}